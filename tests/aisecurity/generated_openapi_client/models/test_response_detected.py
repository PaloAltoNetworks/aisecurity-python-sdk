# Copyright (c) 2025, Palo Alto Networks
#
# Licensed under the Polyform Internal Use License 1.0.0 (the "License");
# you may not use this file except in compliance with the License.
#
# You may obtain a copy of the License at:
#
# https://polyformproject.org/licenses/internal-use/1.0.0
# (or)
# https://github.com/polyformproject/polyform-licenses/blob/76a278c4/PolyForm-Internal-Use-1.0.0.md
#
# As far as the law allows, the software comes as is, without any warranty
# or condition, and the licensor will not be liable to you for any damages
# arising out of these terms or the use or nature of the software, under
# any kind of legal claim.

"""
AISec API service

OpenAPI Specification for the AI Runtime Security API service

The version of the OpenAPI document: 0.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import unittest

from aisecurity.generated_openapi_client.models.response_detected import (
    ResponseDetected,
)


class TestResponseDetected(unittest.TestCase):
    """ResponseDetected unit tests stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseDetected:
        """Test ResponseDetected
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included
        """
        # uncomment below to create an instance of `ResponseDetected`

        if include_optional:
            return ResponseDetected(url_cats=True, dlp=True)
        else:
            return ResponseDetected()

    def testResponseDetected(self):
        """Test ResponseDetected"""
        response_detected = self.make_instance(include_optional=False)
        response_detected_optional = self.make_instance(include_optional=True)

        self.assertIsInstance(response_detected, ResponseDetected)
        self.assertFalse(response_detected.url_cats)
        self.assertFalse(response_detected.dlp)

        # Assertions for optional instance
        self.assertIsInstance(response_detected_optional, ResponseDetected)
        self.assertTrue(response_detected_optional.url_cats)
        self.assertTrue(response_detected_optional.dlp)

        # Additional assertions to ensure correct behavior
        self.assertNotEqual(response_detected, response_detected_optional)
        self.assertEqual(response_detected, ResponseDetected())
        self.assertEqual(response_detected_optional, ResponseDetected(url_cats=True, dlp=True))

        # Test individual attribute setting
        custom_response = ResponseDetected(url_cats=True, dlp=False)
        self.assertTrue(custom_response.url_cats)
        self.assertFalse(custom_response.dlp)


if __name__ == "__main__":
    unittest.main()
